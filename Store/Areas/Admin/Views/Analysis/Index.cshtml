@model Store.Base.Models.ViewModels.AnalysisViewModel

@{
    ViewData["Title"] = "Analysis";
}

@*<h1>@ViewData["Title"]</h1>*@



<div class="row">
    <div class="col-lg-6">
        <div class="card mb-4">
            <div class="card-header"><i class="fas fa-chart-pie mr-1"></i>Users</div>
            <div class="card-body"><canvas id="myPieChart" width="100%" height="50"></canvas></div>
            @*<div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>*@
        </div>
    </div>

    <div class="col-lg-6">
        <div class="card mb-4">
            <div class="card-header"><i class="fas fa-chart-bar mr-1"></i>Users Countries</div>
            <div class="card-body"><canvas id="myBarChart" width="100%" height="50"></canvas></div>
            @*<div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>*@
        </div>
    </div>
</div>
<hr />
<br />
<h2>Transactions</h2>
<div class="row">
    <div class="col-lg-12">
        <table id="table_id" class="display">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Order Id</th>
                    <th>UserName</th>
                    <th>Email</th>
                    <th>Total</th>
                    <th>Point Value</th>
                    <th>Added Points</th>
                    <th>CreateDate</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.CheckoutOrders.Any())
                {
                    @foreach (var item in Model.CheckoutOrders)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Id)</td>
                            <td>@Html.DisplayFor(modelItem => item.OrderId)</td>
                            <td>@Html.DisplayFor(modelItem => item.Vendor.User.UserName)</td>
                            <td>@Html.DisplayFor(modelItem => item.Vendor.User.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.Total)$</td>
                            <td>@Html.DisplayFor(modelItem => item.PointValue)$</td>
                            <td>@Html.DisplayFor(modelItem => item.AddedPoints)</td>
                            <td>@Html.DisplayFor(modelItem => item.CreateDate)</td>
                        </tr>
                    }
                }

            </tbody>
        </table>

    </div>
</div>





<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js" crossorigin="anonymous"></script>



@section Scripts{
    <script>
        console.log(@Model.UsersCountInCountries.Count);


        $(document).ready(function () {
            $('#table_id').DataTable();
        });


        Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#292b2c';

        // Pie Chart Example
        var ctx = document.getElementById("myPieChart");
        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ["Vendors", "Marketers"],
                datasets: [{
                    data: [@Model.Vendors.Count(), @Model.Marketers.Count()],
                    backgroundColor: ['#007bff', '#dc3545'],
                }],
            },
        });



        if (@Model.UsersCountInCountries.Count>0) {
            var country0 = `@Model.UsersCountInCountries[0].Country`;
            var usersCount0 = @Model.UsersCountInCountries[0].AllUsersCount;
        }
        if (@Model.UsersCountInCountries.Count>1) {
            var country1 = `@Model.UsersCountInCountries[1].Country`;
            var usersCount1 = @Model.UsersCountInCountries[1].AllUsersCount;
        }
        if (@Model.UsersCountInCountries.Count>2) {
            var country2 = `@Model.UsersCountInCountries[2].Country`;
            var usersCount2 = @Model.UsersCountInCountries[2].AllUsersCount;
        }
        if (@Model.UsersCountInCountries.Count>3) {
            var country3 = `@Model.UsersCountInCountries[3].Country`;
            var usersCount3 = @Model.UsersCountInCountries[3].AllUsersCount;
        }
        if (@Model.UsersCountInCountries.Count>4) {
            var country4 = `@Model.UsersCountInCountries[4].Country`;
            var usersCount4 = @Model.UsersCountInCountries[4].AllUsersCount;
        }
        if (@Model.UsersCountInCountries.Count>5) {
            var country5 = `@Model.UsersCountInCountries[5].Country`;
            var usersCount5 = @Model.UsersCountInCountries[5].AllUsersCount;
        }







        if (usersCount0 < 10 || usersCount0==null) {
            var maxYAxes = 10;
        } else if (usersCount0 < 100) {
            var maxYAxes = 100;
        }else if (usersCount0 < 1000) {
            var maxYAxes = 1000;
        }


        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#292b2c';

        // Bar Chart Example
        var ctx = document.getElementById("myBarChart");
        var myLineChart = new Chart(ctx, {
          type: 'bar',
          data: {
            labels: [country0, country1, country2, country3, country4, country5],
            datasets: [{
              label: "Revenue",
              backgroundColor: "rgba(2,117,216,1)",
              borderColor: "rgba(2,117,216,1)",
                data: [usersCount0, usersCount1, usersCount2, usersCount3, usersCount4, usersCount5],
            }],
          },
          options: {
            scales: {
              xAxes: [{
                time: {
                  unit: 'month'
                },
                gridLines: {
                  display: false
                },
                ticks: {
                  maxTicksLimit: 6
                }
              }],
              yAxes: [{
                ticks: {
                  min: 0,
                  max: 10,
                  maxTicksLimit: 5
                },
                gridLines: {
                  display: true
                }
              }],
            },
            legend: {
              display: false
            }
          }
        });



    </script>
}
